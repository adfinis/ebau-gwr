name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * 0"

jobs:
  gitlint:
    name: "Gitlint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install gitlint
        run: pip install gitlint
      - name: Run gitlint
        run: gitlint --contrib contrib-title-conventional-commits

  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: "3.10"
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            pip-
      - name: Install dependencies
        run: pip install --upgrade --no-cache-dir --requirement requirements-dev.txt --disable-pip-version-check
      - name: Run black
        run: black --check .
      - name: Run flake8
        run: flake8

  docker-tests:
    name: "Docker tests"
    runs-on: ubuntu-latest
    needs: [gitlint, lint]

    steps:
      - uses: actions/checkout@v2
      - name: Set UID
        run: echo "UID=$(id --user)" > .env
      - name: Build the containers
        run: make build
      - name: Lint the code
        run: make lint
      - name: Run test suite
        run: make test

  compatibility-tests:
    name: "Compatibility tests"
    runs-on: ubuntu-latest
    needs: [gitlint, lint]

    env:
      ENV: dev

    strategy:
      matrix:
        python_version:
          - "3.8"
          - "3.9"
          - "3.10"

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ebau-gwr
          POSTGRES_PASSWORD: ebau-gwr
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python_version }}
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            pip-
      - name: Set UID
        run: echo "UID=$(id --user)" > .env
      - name: Install dependencies
        run: pip install --upgrade --no-cache-dir --requirement requirements-dev.txt --disable-pip-version-check
      - name: Run migrations
        run: ./manage.py migrate
      - name: Run test suite
        run: pytest  --no-cov-on-fail --cov --create-db -vv
