[tool.poetry]
name = "ebau-gwr"
version = "0.4.1"
description = "GWR synchronisation for ebau projects"
homepage = "https://github.com/adfinis-sygroup/ebau-gwr"
repository = "https://github.com/adfinis-sygroup/ebau-gwr"
authors = ["Adfinis AG"]
license = "GPL-3.0-or-later"
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Framework :: Django",
    "Intended Audience :: Developers",
    "Environment :: Web Environment",
]
include = ["CHANGELOG.md"]
exclude = [
    "ebau_gwr/conftest.py",
    "ebau_gwr/**/tests",
]

[tool.poetry.dependencies]
python = "^3.8"
cryptography = "^36.0.1"
Django = "^3.2"
django-environ = "^0.8.1"
django-filter = "^21.1"
django-generic-api-permissions = "^0.2.0"
djangorestframework = "^3.13.1"
djangorestframework-jsonapi = "^5.0.0"
mozilla-django-oidc = "^2.0.0"
psycopg2-binary = "^2.9.3"
requests = "^2.27.1"
uWSGI = "^2.0.20"

[tool.poetry.dev-dependencies]
black = "^22.1.0"
django-extensions = "^3.1.5"
factory-boy = "^3.2.1"
flake8 = "^4.0.1"
flake8-blind-except = "^0.2.0"
flake8-debugger = "^4.0.0"
flake8-docstrings = "^1.6.0"
flake8-isort = "^4.1.1"
flake8-string-format = "^0.3.0"
flake8-tuple = "^0.4.1"
gitlint = "^0.17.0"
ipython = "^8.1.1"
isort = "^5.10.1"
lxml = "^4.8.0"
pdbpp = "^0.10.3"
pre-commit = "^2.17.0"
pytest = "^7.0.1"
pytest-cov = "^3.0.0"
pytest-django = "^4.5.2"
pytest-env = "^0.6.2"
pytest-factoryboy = "^2.1.0"
pytest-mock = "^3.7.0"
pytest-randomly = "^3.11.0"
python-semantic-release = "^7.26.0"
requests-mock = "^1.9.3"
snapshottest = "^0.6.0"
xmlschema = "^1.9.2"

[tool.isort]
skip = [
  "migrations",
  "snapshots",
]
known_first_party = "ebau_gwr"
known_third_party = "xmlschema"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
combine_as_imports = true
line_length = 88

[tool.pytest.ini_options]
addopts = "--reuse-db --randomly-seed=1521188766 --randomly-dont-reorganize"
DJANGO_SETTINGS_MODULE = "ebau_gwr.settings"
filterwarnings = [
    "error::DeprecationWarning",
    "error::PendingDeprecationWarning",
]
env = [
    "ADMINS=Test Example <test@example.com>,Test2 <test2@example.com>",
    "OIDC_OP_USER_ENDPOINT=mock://ebau-gwr.github.com/openid/userinfo",
    "OIDC_OP_INTROSPECT_ENDPOINT=mock://ebau-gwr.github.com/openid/introspect",
    "OIDC_BEARER_TOKEN_REVALIDATION_TIME=60",
]

[tool.coverage.run]
source = ["."]

[tool.coverage.report]
fail_under = 100
exclude_lines = [
    "pragma: no cover",
    "pragma: todo cover",
    "def __str__",
    "def __unicode__",
    "def __repr__",
]
omit = [
    "*/migrations/*",
    "*/apps.py",
    "manage.py",
    "ebau_gwr/settings_*.py",
    "ebau_gwr/wsgi.py",
]
show_missing = true

[tool.semantic_release]
version_toml = "pyproject.toml:tool.poetry.version"
branch = "main"
major_on_zero = false
upload_to_repository = true
upload_to_release = true
build_command = "poetry build"
commit_subject = "chore(release): v{version}"
commit_author = "github-actions <github-actions@github.com>"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
